
Deploy requirements:
#####################

- Install mongo (with full text search).  If using version 2.4 on a numa
  machine, then run like this: 

$> numactl --interleave=all mongod --dbpath data/db/ --setParameter textSearchEnabled=true 

make sure data/db exists in the current directory

In modern OS do:

$> sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927
$> echo "deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list
$> sudo apt-get update
$> sudo apt-get install mongodb-org

- Install python3. It is easy to do this in userspace

- Create a virtualenv with python3

$> sudo apt-get install python-virtualenv
$> virtualenv -p /usr/bin/python3.4 <name-venv>

- Install math libraries for highest performance

$> sudo apt-get install gfortran libopenblas-dev liblapack-dev

- Install all requirements. There are some version problems, iterate a few times
  removing hard constraints on versions. When a system wide dependency for
  scipy, scikit-learn or numpy exists, try to leverage it.

Some of the additional packages asked (in a ubuntu machine):

$> sudo apt-get install python3.4-dev (or whatever version is present)
$> sudo apt-get install lib32ncurses5-dev
$> sudo apt-get install python-numpy

may need to install scipy individually first

$> pip install scipy

WEB:
##
Install the web server, uwsgi and uwsgi-plugin-python (system wide):

$> deactivate
$> sudo apt-get install nginx uwsgi uwsgi-plugin-python

use this command to restart nginx whenever a configuration changes:

$> sudo /etc/init.d/nginx restart

Create nginx folders and delete default config:

$> sudo mkdir /var/www/aurum
$> sudo chown -R ra:ra /var/www/aurum (change ra for your user)
$> sudo rm /etc/nginx/sites-enabled/default

Move the file webserverconfig/aurum.conf to
/var/www/aurum/aurum.conf

then copy webgui (static files) to /var/www/aurum/static

$> cp -r webgui/ /var/www/aurum/static/

and then symlink the file to nginx configuration directory:

$> sudo ln -s /var/www/aurum/aurum.conf /etc/nginx/conf.d/

Move the file webserverconfig/uwsgi.ini to 
/var/www/aurum/uwsgi.ini

Create files for uwsgi logs:

$> sudo mkdir -p /var/log/uwsgi
$> sudo chown -R ra:ra /var/log/uwsgi (change ra for your user)

Test that uwsgi works, i.e., that nginx can connect to uwsgi:

$> uwsgi --ini /var/www/aurum/uwsgi.ini

Change endpoint for webclient app. In js/controller.js indicate the correct one

Different loading techniques:
#############################

- dataloader is a single threaded impl build_idx_coordinator is a multi-thread
  multi machine impl

- ddworker is a simple worker in charge of computing n^2 pairs for similarity
  and overlap, it is coordinated by build_idx_coordinator

- fullworker is a worker in charge of: loading, computing signature,
  communicating to coordinator

Start load:
#########

workers:
celery -A fullworker worker --loglevel=INFO --concurrency 1 -n worker1 -Q w1

master:
python indexer.py --mode ALL --input csvfiles ~/Desktop/slicemitdwh/ --dataset fakeagain --workers w1

